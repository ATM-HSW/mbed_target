%% File : sfunar_digitalInput.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2014 Dr.O.Hagendorf, HS Wismar

%implements sfunar_digitalInput "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output

  %if !SLibCodeGenForSim()
      %assign p1_val = LibBlockParameterValue(p1, 0)
      %assign p2_val = LibBlockParameterValue(p2, 0)
      %assign p3_val = LibBlockParameterValue(p3, 0)

      %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
      %assign name = FEVAL("strrep",name," ","_")
      %assign pname = "P" + FEVAL("char",p2_val+64) + "_" + FEVAL("int2str",p1_val-1)
      %openfile declbuf

      DigitalIn %<name>(%<pname>);

      %closefile declbuf
      %assign srcFile = LibGetModelDotCFile()
      %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>
  %endif

  %if !SLibCodeGenForSim()
      %% PullDefault, PullUp, PullDown, PullNone
      %switch(p3_val)
        %case 1
          %<name>.mode(PullDefault);
          %break
        %case 2
          %<name>.mode(PullUp);
          %break
        %case 3
          %<name>.mode(PullDown);
          %break
        %case 4
          %<name>.mode(PullNone);
          %break
        %default
          %<name>.mode(PullDefault);
          %break
      %endswitch
  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %if !SLibCodeGenForSim()
    %if !LibBlockOutputSignalIsExpr(0)
      %assign y1_val = LibBlockOutputSignal(0, "", "", 0)
      %assign p1_val = LibBlockParameterValue(p1, 0)
      %assign p2_val = LibBlockParameterValue(p2, 0)

      %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
      %assign name = FEVAL("strrep",name," ","_")
      %%
      %<y1_val> = %<name>;
      %%
    %endif 
  %endif
%endfunction

