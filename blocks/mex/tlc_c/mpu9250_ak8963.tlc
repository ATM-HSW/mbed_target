%%  MbedTarget Simulink target
%%  Copyright (c) 2014-2017 Dr.O.Hagendorf , HS Wismar
%%
%%  Licensed under the Apache License, Version 2.0 (the "License");
%%  you may not use this file except in compliance with the License.
%%  You may obtain a copy of the License at
%%
%%      http://www.apache.org/licenses/LICENSE-2.0
%%
%%  Unless required by applicable law or agreed to in writing, software
%%  distributed under the License is distributed on an "AS IS" BASIS,
%%  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%  See the License for the specific language governing permissions and
%%  limitations under the License.

%implements mpu9250_ak8963 "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

  %<LibAddToCommonIncludes("MPU9250.h")>

%endfunction


%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output
  %if !SLibCodeGenForSim()
      %assign i2cbus_val = LibBlockParameterValue(i2cbus, 0)
      %assign i2c_name = "i2c" + FEVAL("int2str",%<i2cbus_val>)
	  %assign subaddress_val = CAST("Number",LibBlockParameterValue(SubAddress, 0))-1
	  
	  %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
      %assign name = FEVAL("strrep",name," ","_")
      %assign name = FEVAL("strrep",name,"-","_")
      %openfile declbuf

      MPU9250 %<name>(&%<i2c_name>,%<subaddress_val>);  

      %closefile declbuf
      %assign srcFile = LibGetModelDotCFile()
      %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>
	  
	  %<name>.resetMPU9250();
	  %<name>.initAK8963();
	  %<name>.initMPU9250();
  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %if !SLibCodeGenForSim()
    %if !LibBlockOutputSignalIsExpr(0)
      %assign x_mag_val = LibBlockOutputSignal(0, "", "", 0)   
      %assign y_mag_val = LibBlockOutputSignal(1, "", "", 0)
	  %assign z_mag_val = LibBlockOutputSignal(2, "", "", 0)   

	  %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
      %assign name = FEVAL("strrep",name," ","_")
      %assign name = FEVAL("strrep",name,"-","_")
	  %assign mess_name = "mess" + name
	  float %<mess_name>[3];
      %%
	  %<name>.readMagData(%<mess_name>); 
	  %<x_mag_val> = (double)%<mess_name>[0];
	  %<y_mag_val> = (double)%<mess_name>[1];
	  %<z_mag_val> = (double)%<mess_name>[2];

      %%
    %endif 
  %endif
%endfunction
