%%  MbedTarget Simulink target
%%  Copyright (c) 2014-2018 Dr.O.Hagendorf , HS Wismar
%%
%%  Licensed under the Apache License, Version 2.0 (the "License");
%%  you may not use this file except in compliance with the License.
%%  You may obtain a copy of the License at
%%
%%      http://www.apache.org/licenses/LICENSE-2.0
%%
%%  Unless required by applicable law or agreed to in writing, software
%%  distributed under the License is distributed on an "AS IS" BASIS,
%%  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%  See the License for the specific language governing permissions and
%%  limitations under the License.

%implements ethernetIpConfigStack "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

  %<LibAddToCommonIncludes("EthernetInterface.h")>

%endfunction

%% Function: Start ========================================================
%function Start(block, system) Output
  %if !SLibCodeGenForSim()

    %assign ip =      SFcnParamSettings.IP
    %assign submask = SFcnParamSettings.submask
    %assign gateway = SFcnParamSettings.gateway

    %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
    %assign name = FEVAL("strrep",name," ","_")
    %assign name = FEVAL("strrep",name,"-","_")

    %%Add Ethernet things to the includes
    %openfile declbuf
    // %<Type> (ethernetIpConfigStack): '%<Name>'
    #define LWIP_TIMEVAL_PRIVATE 0
    %closefile declbuf

    %%Add Ethernet things to the variable declarations
    %openfile declbuf
    #ifndef ETHERNETINTERFACE
      #define ETHERNETINTERFACE
      // %<Type> (ethernetIpConfigStack): 'net'
      EthernetInterface net;
    #endif
    %closefile declbuf 

    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>

    %assign val_dhcp = LibBlockParameterValue(dhcp,0)

    %if %<val_dhcp>==0
      net.set_network("%<ip>","%<submask>","%<gateway>");
      printf("set IP address: %s\n", "%<ip>");
    %else
      //printf("try dhcp\n");
    %endif
    //wait(1);
    int retnet = net.connect();
    printf("eth connect ret: %d\n", retnet);
    // Show the network address
    const char *ip = net.get_ip_address();
    printf("IP address is: %s\n", ip ? ip : "No IP");

  %endif

%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

%endfunction