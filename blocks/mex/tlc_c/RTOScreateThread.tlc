%% File : RTOScreateThread.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2015-17 Dr.O.Hagendorf, HS Wismar
%% Copyright 2015 M. Marquardt, HS Wismar

%implements RTOScreateThread "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output
  %if !SLibCodeGenForSim()

    %assign valThreadPriority = LibBlockParameterValue(ThreadPriority, 0) %% Priority
    %assign valStackOption = LibBlockParameterValue(StackOption, 0) %% StackOption
    %assign valStackSize = CAST("Number",LibBlockParameterValue(StackSize, 0)) %% Stacksize
    %assign valTiming = CAST("Number",LibBlockParameterValue(Timing, 0))  %% Timing
  
    %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
    %assign name = FEVAL("strrep",name," ","_")
    %assign name = FEVAL("strrep",name,"-","_")
  
    %switch(valThreadPriority)
      %case(1)
          %assign nThreadPriority = "osPriorityIdle"
          %break
      %case(2)
          %assign nThreadPriority = "osPriorityLow"
          %break
      %case(3)
          %assign nThreadPriority = "osPriorityBelowNormal"
          %break
      %case(4)
          %assign nThreadPriority = "osPriorityNormal"
          %break
      %case(5)
          %assign nThreadPriority = "osPriorityAboveNormal"
          %break
      %case(6)
          %assign nThreadPriority = "osPriorityHigh"
          %break
      %case(7)
          %assign nThreadPriority = "osPriorityRealtime"
          %break
      %default
          %assign nThreadPriority = "osPriorityNormal"
    %endswitch
  
    %if valStackOption == 1
      %assign nStackSize = "DEFAULT_STACK_SIZE"
    %else
      %assign nStackSize = valStackSize
    %endif

    %assign ertMainFile = LibCreateSourceFile("Source", "Custom", "ert_main")

    %openfile declbuf
    // %<Type> (RTOScreateThread): '%<Name>'
    extern void %<name>_thread();
    
    %closefile declbuf

    %<LibAddSourceFileCustomSection(ertMainFile,"Declarations","Ert_main_glob_decl")>
    %<LibSetSourceFileCustomSection(ertMainFile,"Ert_main_glob_decl",declbuf)>

    %openfile declbuf
    // %<Type> (RTOScreateThread): '%<Name>'
    Thread %<name>(%<nThreadPriority>, %<nStackSize>);
    %<name>.start(callback(%<name>_thread));
    %closefile declbuf

    %<LibAddSourceFileCustomSection(ertMainFile,"Declarations","Ert_main_loc_decl")>
    %<LibSetSourceFileCustomSection(ertMainFile,"Ert_main_loc_decl",declbuf)>

    %openfile declbuf
    // %<Type> (RTOScreateThread): '%<Name>'
    void %<name>_thread() {
      while(1) {
        %<LibBlockExecuteFcnCall(block,0)>
        Thread::wait(%<valTiming>);
      }
    }
    %closefile declbuf

    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Functions", declbuf)>

  %endif
%endfunction
