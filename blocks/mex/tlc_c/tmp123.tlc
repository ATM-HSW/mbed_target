%%  MbedTarget Simulink target
%%  Copyright (c) 2014-2017 Dr.O.Hagendorf , HS Wismar
%%
%%  Licensed under the Apache License, Version 2.0 (the "License");
%%  you may not use this file except in compliance with the License.
%%  You may obtain a copy of the License at
%%
%%      http://www.apache.org/licenses/LICENSE-2.0
%%
%%  Unless required by applicable law or agreed to in writing, software
%%  distributed under the License is distributed on an "AS IS" BASIS,
%%  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%  See the License for the specific language governing permissions and
%%  limitations under the License.

%% File : tmp123.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2014-2017 Dr.O.Hagendorf, HS Wismar
%% Copyright 2015 M. Marquardt, HS Wismar

%implements tmp123 "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

  %<LibAddToCommonIncludes("tmp123.h")>

  %% global variable containing the CS Port and Pin Values used by any TMP123 block
  %% lower 16 Bit contain pin number
  %% upper 16 Bit contain port number
  %% example: 0b 00000000 00000001 00000000 00000001 = PA_0
  %%          0b 00000000 00001000 01000000 00000000 = PD_14
  %assign ::TMP123_CS = CAST("Number",0)

%endfunction


%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output
  %if !SLibCodeGenForSim()

    %assign spiport_val = CAST("Number",LibBlockParameterValue(SpiPort, 0))
    %assign csport_val = CAST("Number",LibBlockParameterValue(CsPort, 0))
    %assign cspin_val = CAST("Number",LibBlockParameterValue(CsPin, 0))-1

    %assign pname = "P" + FEVAL("char",csport_val+64) + "_" + FEVAL("int2str",cspin_val)
    %assign instance = FEVAL("char",csport_val+64) + FEVAL("int2str",cspin_val)

    %if !((::TMP123_CS & ((1<<(csport_val+15)) | (1<<cspin_val))) == ((1<<(csport_val+15)) | (1<<cspin_val)))

      %openfile declbuf
      TMP123 tmp123_%<instance>(&spi%<spiport_val>,%<pname>);
      %closefile declbuf

      %assign srcFile = LibGetModelDotCFile()
      %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>

      %assign ::TMP123_CS = ::TMP123_CS | ((1<<(csport_val+15)) | (1<<cspin_val))
    %endif

  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output
  %if !SLibCodeGenForSim()

    %assign csport_val = CAST("Number",LibBlockParameterValue(CsPort, 0))
    %assign cspin_val = CAST("Number",LibBlockParameterValue(CsPin, 0))-1
    %assign instance = FEVAL("char",csport_val+64) + FEVAL("int2str",cspin_val)

    %<LibBlockOutputSignal(0, "", "", 0)> = tmp123_%<instance>.get_temp();

  %endif
%endfunction
