%%  MbedTarget Simulink target
%%  Copyright (c) 2014-2017 Dr.O.Hagendorf , HS Wismar
%%
%%  Licensed under the Apache License, Version 2.0 (the "License");
%%  you may not use this file except in compliance with the License.
%%  You may obtain a copy of the License at
%%
%%      http://www.apache.org/licenses/LICENSE-2.0
%%
%%  Unless required by applicable law or agreed to in writing, software
%%  distributed under the License is distributed on an "AS IS" BASIS,
%%  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%  See the License for the specific language governing permissions and
%%  limitations under the License.

%% File : sfunar_powerStep01.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2015 Dr.O.Hagendorf, HS Wismar
%% Copyright 2016 Sven Lack

%implements powerSTEP01_setanalogvalue "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

  %<LibAddToCommonIncludes("DevSPI.h")>
  %<LibAddToCommonIncludes("powerstep01_class.h")>

%<LibAddToModelSources("powerstep01_class")>  
%endfunction


%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output

%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %assign SSEL_port_val = LibBlockParameterValue(SSELPort, 0)
  %assign SSEL_pin_val = LibBlockParameterValue(SSELPin, 0)
  %assign ssel = "P" + FEVAL("char",SSEL_port_val+64) + "_" + FEVAL("int2str",SSEL_pin_val-1)
  
  %assign SPI_Nummer = LibBlockParameterValue(SPINr,0)
  %assign spiport_name = "spi" + FEVAL("int2str",SPI_Nummer)
  
  %assign NumMotors_val_1 = LibBlockParameterValue(NumMotors,0)	
  
  	%switch NumMotors_val_1
		%case 1
			%assign motor = "motor_1_"+spiport_name+ssel
			%break
		%case 2
			%assign motor = "motor_2_"+spiport_name+ssel
			%break
		%case 3
			%assign motor = "motor_3_"+spiport_name+ssel
			%break
		%default
			%break
	%endswitch
	
  %assign checkbox_CV = CAST("Number",LibBlockParameterValue(VCModeSEL,0))
  %assign parameterC = LibBlockParameterValue(ParameterC,0)
  %assign parameterV = LibBlockParameterValue(ParameterV,0)
	
  %if checkbox_CV==1
  	%switch parameterC
		%case 1
			%assign parameter= "POWERSTEP01_ABS_POS"
			%break
		%case 2
			%assign parameter = "POWERSTEP01_MARK"
			%break
		%case 3
			%assign parameter = "POWERSTEP01_ACC"
			%break
		%case 4
			%assign parameter= "POWERSTEP01_DEC"
			%break
		%case 5
			%assign parameter = "POWERSTEP01_SPEED"
			%break
		%case 6
			%assign parameter = "POWERSTEP01_MAX_SPEED"
			%break
		%case 7
			%assign parameter= "POWERSTEP01_MIN_SPEED"
			%break
		%case 8
			%assign parameter = "POWERSTEP01_FS_SPD"
			%break
		%case 9
			%assign parameter = "POWERSTEP01_OCD_TH"
			%break
		%case 10
			%assign parameter = "POWERSTEP01_TVAL_HOLD"
			%break
		%case 11
			%assign parameter= "POWERSTEP01_TVAL_RUN"
			%break
		%case 12
			%assign parameter = "POWERSTEP01_TVAL_ACC"
			%break
		%case 13
			%assign parameter = "POWERSTEP01_TVAL_DEC"
			%break
		%default
			%break
	%endswitch

  %else
  	%switch parameterV
		%case 1
			%assign parameter= "POWERSTEP01_ABS_POS"
			%break
		%case 2
			%assign parameter = "POWERSTEP01_MARK"
			%break
		%case 3
			%assign parameter = "POWERSTEP01_ACC"
			%break
		%case 4
			%assign parameter= "POWERSTEP01_DEC"
			%break
		%case 5
			%assign parameter = "POWERSTEP01_SPEED"
			%break
		%case 6
			%assign parameter = "POWERSTEP01_MAX_SPEED"
			%break
		%case 7
			%assign parameter= "POWERSTEP01_MIN_SPEED"
			%break
		%case 8
			%assign parameter = "POWERSTEP01_FS_SPD"
			%break
		%case 9
			%assign parameter = "POWERSTEP01_INT_SPD"
			%break
		%case 10
			%assign parameter = "POWERSTEP01_K_THERM"
			%break
		%case 11
			%assign parameter= "POWERSTEP01_OCD_TH"
			%break
		%case 12
			%assign parameter = "POWERSTEP01_STALL_TH"
			%break
		%case 13
			%assign parameter = "POWERSTEP01_KVAL_HOLD"
			%break
		%case 14
			%assign parameter = "POWERSTEP01_KVAL_RUN"
			%break
		%case 15
			%assign parameter = "POWERSTEP01_KVAL_ACC"
			%break
		%case 16
			%assign parameter = "POWERSTEP01_KVAL_DEC"
			%break
		%case 17
			%assign parameter= "POWERSTEP01_ST_SLP"
			%break
		%case 18
			%assign parameter = "POWERSTEP01_FN_SLP_ACC"
			%break
		%case 19
			%assign parameter = "POWERSTEP01_FN_SLP_DEC"
			%break
		%default
			%break
	%endswitch
  
  %endif

      %assign set = LibBlockInputSignal(0, "", "", 0)
	


  
  %if !SLibCodeGenForSim()
    
	%<motor>->  SetAnalogValue(%<parameter>,%<set>);
 
  %endif
%endfunction
