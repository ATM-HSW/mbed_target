%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2014 Dr.O.Hagendorf, HS Wismar
%% Copyright 2015 M. Marquardt, HS Wismar

%implements sfunar_spi_write "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output
  %if !SLibCodeGenForSim()
	  %assign csport_val = CAST("Number",LibBlockParameterValue(CsPort, 0))
	  %assign cspin_val = CAST("Number",LibBlockParameterValue(CsPin, 0))-1
	  
	  %assign pname = "P" + FEVAL("char",csport_val+64) + "_" + FEVAL("int2str",cspin_val)
	  %assign instance = FEVAL("char",csport_val+64) + FEVAL("int2str",cspin_val)
	  
	  %openfile declbuf
	
	  DigitalOut cs_%<instance>(%<pname>);

	  %closefile declbuf
	  %assign srcFile = LibGetModelDotCFile()
	  %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>
		
  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

	%assign spiport_val = CAST("Number",LibBlockParameterValue(SpiPort, 0))
	%assign csport_val = CAST("Number",LibBlockParameterValue(CsPort, 0))
	%assign cspin_val = CAST("Number",LibBlockParameterValue(CsPin, 0))-1
	  
	%if !SLibCodeGenForSim()
	
	  %if LibBlockInputSignalWidth(0) > 1
		%assign u_val = LibBlockInputSignalAddr(0, "", "", 0)
		%assign y_val = LibBlockOutputSignalAddr(0, "", "", 0)
		
		uint8_T* u_ptr = %<u_val>;
		uint8_T* y_ptr = %<y_val>;
		for(int i=0; i < %<LibBlockInputSignalWidth(0)>; i++)
		{
		  y_ptr[i] = spi%<spiport_val>.write(u_ptr[i]);
		}
	  
	  %else
		%assign u_val = LibBlockInputSignal(0, "", "", 0)
		%assign y_val = LibBlockOutputSignal(0, "", "", 0)
		
		%<y_val> = spi%<spiport_val>.write(%<u_val>);
	  %endif
	  
    %endif
%endfunction
