%%  MbedTarget Simulink target
%%  Copyright (c) 2014-2017 Dr.O.Hagendorf , HS Wismar
%%
%%  Licensed under the Apache License, Version 2.0 (the "License");
%%  you may not use this file except in compliance with the License.
%%  You may obtain a copy of the License at
%%
%%      http://www.apache.org/licenses/LICENSE-2.0
%%
%%  Unless required by applicable law or agreed to in writing, software
%%  distributed under the License is distributed on an "AS IS" BASIS,
%%  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%  See the License for the specific language governing permissions and
%%  limitations under the License.

%% File : CANSend.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2017 E.Warnicke, HS Wismar
%% Copyright 2017 Dr.O.Hagendorf, HS Wismar

%implements MQTT_pub "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output
  %if !SLibCodeGenForSim()
    %openfile declbuf
    // %<Type> (MQTT_pub): '%<Name>'
        MQTT::Message pub_message;
    char buf[100];
    %closefile declbuf
    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>
  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output
  %if !SLibCodeGenForSim()
    %%assign CAN_num = CAST("Number",LibBlockParameterValue(CANInstanceID,0))
    %%assign bEnableMsgIDInput = CAST("Number",LibBlockParameterValue(enableMsgID,0))
    
    %assign u1_ptr = LibBlockInputSignalAddr(0,"","",0)
    %assign u1_width =LibBlockInputSignalWidth(0)
    %assign topic = "\""+LibBlockParameterString(MQTT_topic)+"\""

    sprintf(buf,"%d",*(%<u1_ptr>));
        
    pub_message.payload=(void*)buf;
    //printf("payload %s",buf);
    //fflush(stdout);
    pub_message.payloadlen=strlen(buf)+1;
    if(connected==3){
        rc=Client->publish(%<topic>,pub_message);
        if(rc!=0)printf("publish error %d\r\n",rc);
    }

  %endif
%endfunction
