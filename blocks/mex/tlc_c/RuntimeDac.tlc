%%  MbedTarget Simulink target
%%  Copyright (c) 2014-2018 Dr.O.Hagendorf , HS Wismar
%%
%%  Licensed under the Apache License, Version 2.0 (the "License");
%%  you may not use this file except in compliance with the License.
%%  You may obtain a copy of the License at
%%
%%      http://www.apache.org/licenses/LICENSE-2.0
%%
%%  Unless required by applicable law or agreed to in writing, software
%%  distributed under the License is distributed on an "AS IS" BASIS,
%%  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%  See the License for the specific language governing permissions and
%%  limitations under the License.

%% File : RuntimeDac.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2014-2017 Dr.O.Hagendorf, HS Wismar
%% Copyright 2015 M. Marquardt, HS Wismar

%implements RuntimeDac "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction

%% Function: Start ========================================================
%function Start(block, system) Output
  %if !SLibCodeGenForSim()

    %assign Portname = CAST("Number",LibBlockParameterValue(PortName, 0))
    %assign Pinnumber = CAST("Number",LibBlockParameterValue(PinNumber, 0))

    %assign pname = "P" + FEVAL("char",Portname+64) + "_" + FEVAL("int2str",Pinnumber-1)
    %assign name = "RunTimeDAC_" + pname
    %assign nameDef = "RUNTIMEDAC_" + FEVAL("char",Portname+64) + FEVAL("int2str",Pinnumber-1)

    %openfile declbuf
    // %<Type> (RuntimeDac): '%<Name>'
    #ifndef %<nameDef>
    AnalogOut %<name>(%<pname>);
    real32_T %<name>_old=0.0;
    #define %<nameDef>
    #endif
    %closefile declbuf

    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>

    %<name>.write(0.0f);

  %endif
%endfunction


%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %if !SLibCodeGenForSim()

    %assign Portname = CAST("Number",LibBlockParameterValue(PortName, 0))
    %assign Pinnumber = CAST("Number",LibBlockParameterValue(PinNumber, 0))
    %assign Dacvalue = LibBlockParameterValue(DacValue, 0)
    %assign ModeValue = LibBlockParameterValue(Mode, 0)

    %assign pname = "P" + FEVAL("char",Portname+64) + "_" + FEVAL("int2str",Pinnumber-1)
    %assign name = "RunTimeDAC_" + pname

    %if ModeValue == 1
      %<name>.write(%<Dacvalue>);
    %else
      %openfile buffer
      // %<Type> (RuntimeDac): '%<Name>'
      // Set DAC value at the beginning of subsystem/model
      %<name>_old = %<name>.read();
      %<name>.write(%<Dacvalue>);
      %closefile buffer

      %<LibSystemOutputCustomCode(system, buffer, "header")>
    %endif

    %if ModeValue == 2
      %openfile buffer
      // %<Type> (RuntimeDac): '%<Name>'
      // set DAC value to the old value at the end of a subsystem/model
      %<name>.write(%<name>_old);
      %closefile buffer

      %<LibSystemOutputCustomCode(system, buffer, "trailer")>
    %endif

  %endif
%endfunction
