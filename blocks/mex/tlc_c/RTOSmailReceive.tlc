%% File : sfunar_encoderInput.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2015-16 Dr.O.Hagendorf, HS Wismar
%% Copyright 2015 M. Marquardt, HS Wismar

%implements RTOSmailReceive "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: Outputs ========================================================
%function Outputs(block, system) Output
  %if !SLibCodeGenForSim()

    %assign valMailNumber = CAST("Number",LibBlockParameterValue(MailNumber, 0))
    %assign valTimeout = LibBlockParameterValue(Timeout, 0)

    %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
    %assign y2_val = LibBlockOutputSignal(1, "", "", 0)

    %if valTimeout == 4294967295
      osEvent evt%<valMailNumber> = mail_box%<valMailNumber>.get(osWaitForever);
    %else
      osEvent evt%<valMailNumber> = mail_box%<valMailNumber>.get(%<valTimeout>);
    %endif
    if(evt%<valMailNumber>.status == osEventMail)
    {
      mail%<valMailNumber>_T *mail%<valMailNumber>_ptr = (mail%<valMailNumber>_T*)evt%<valMailNumber>.value.p;
      memcpy(%<y1_ptr>, mail%<valMailNumber>_ptr, mail%<valMailNumber>_len);
      mail_box%<valMailNumber>.free(mail%<valMailNumber>_ptr);
      %<y2_val> = 1;
    }
    else
    {
      %<y2_val> = 0;
    }

  %endif
%endfunction