%%  MbedTarget Simulink target
%%  Copyright (c) 2014-2017 Dr.O.Hagendorf , HS Wismar
%%
%%  Licensed under the Apache License, Version 2.0 (the "License");
%%  you may not use this file except in compliance with the License.
%%  You may obtain a copy of the License at
%%
%%      http://www.apache.org/licenses/LICENSE-2.0
%%
%%  Unless required by applicable law or agreed to in writing, software
%%  distributed under the License is distributed on an "AS IS" BASIS,
%%  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%  See the License for the specific language governing permissions and
%%  limitations under the License.

%implements udpClientWriteBlock "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

%endfunction

%% Function: Start ========================================================
%function Start(block, system) Output

%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %assign socket_id = FEVAL("int2str",LibBlockParameterValue(sock_ID,0))

  %assign enable_number_of_bytes_val = LibBlockParameterValue(enable_number_of_bytes,0)
  %if enable_number_of_bytes_val
    %assign number_of_bytes = LibBlockInputSignal(1, "", "", 0)
  %else
    %assign number_of_bytes = %<LibBlockInputSignalWidth(0)>
  %endif

  %assign u1_ptr = LibBlockInputSignalAddr(0, "", "", 0)

  %%send the data
  char* ptr = (char*)%<u1_ptr>;
  ret = oUDPSocket_%<socket_id>.sendto(host_ip_address_%<socket_id>, host_port_%<socket_id>, ptr, %<number_of_bytes>);
  printf("sendto %d\n", ret);
%endfunction