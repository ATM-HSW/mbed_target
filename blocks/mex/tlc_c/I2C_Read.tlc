%% File : I2C_Read.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2015-2016 Dr.O.Hagendorf, HS Wismar
%% Copyright 2015 M. Marquardt, HS Wismar

%implements I2C_Read "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %if !SLibCodeGenForSim()

    %assign bAddressFlag   = LibBlockParameterValue(AddressFlag, 0)
    %assign nSlaveAddress  = LibBlockParameterValue(SlaveAddress, 0)
    %assign bByteCountFlag = LibBlockParameterValue(ByteCountFlag, 0)
    %assign nNumBytes      = LibBlockParameterValue(NumBytes, 0)
    %assign bRepeated      = LibBlockParameterValue(Repeated, 0)
    %assign nI2CPort       = LibBlockParameterValue(I2CPort, 0)
    %assign bAckOut        = LibBlockParameterValue(AckOut, 0)

    %switch nI2CPort
      %case 1
        %assign i2c_instance = "i2c1"
        %break
      %case 2
        %assign i2c_instance = "i2c2"
        %break
      %case 3
        %assign i2c_instance = "i2c3"
        %break
      %case 4
        %assign i2c_instance = "i2c4"
        %break
      %default
        %break
    %endswitch

    %if bAddressFlag == 1
      %assign nSlaveAddress = LibBlockInputSignal(0, "", "", 0)
    %endif

    %if bByteCountFlag == 1 && bAddressFlag == 0
      %assign nNumBytes = LibBlockInputSignal(0, "", "", 0)
    %elseif bByteCountFlag == 1 && bAddressFlag == 1  
      %assign nNumBytes = LibBlockInputSignal(1, "", "", 0)
    %endif

    %assign y1_val = LibBlockOutputSignalAddr(0, "", "", 0)

    %if bAckOut == 0
      %<i2c_instance>.read(%<nSlaveAddress>, (char_T*)%<y1_val>, %<nNumBytes>, %<bRepeated>);
    %else
      %assign y2_val = LibBlockOutputSignal(1, "", "", 0)
      %<y2_val> = %<i2c_instance>.read(%<nSlaveAddress>, (char_T*)%<y1_val>, %<nNumBytes>, %<bRepeated>);
    %endif

  %endif
%endfunction
