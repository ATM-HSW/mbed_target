%%  MbedTarget Simulink target
%%  Copyright (c) 2014-2017 Dr.O.Hagendorf , HS Wismar
%%
%%  Licensed under the Apache License, Version 2.0 (the "License");
%%  you may not use this file except in compliance with the License.
%%  You may obtain a copy of the License at
%%
%%      http://www.apache.org/licenses/LICENSE-2.0
%%
%%  Unless required by applicable law or agreed to in writing, software
%%  distributed under the License is distributed on an "AS IS" BASIS,
%%  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%  See the License for the specific language governing permissions and
%%  limitations under the License.

%% File : sfunar_Interrupt.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2016 Dr.O.Hagendorf, HS Wismar

%implements Interrupt "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output

  %if !SLibCodeGenForSim()
    %assign srcFile = LibGetModelDotCFile()

    %assign nPortName = LibBlockParameterValue(PortName, 0)
    %assign nPinNumber = LibBlockParameterValue(PinNumber, 0)
    %assign pname = "P" + FEVAL("char",nPortName+64) + "_" + FEVAL("int2str",nPinNumber-1)

    %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
    %assign name = FEVAL("strrep",name," ","_")
    %assign name = FEVAL("strrep",name,"-","_")

    %openfile declbuf
    // %<Type> (Interrupt): '%<Name>'
    InterruptIn %<name>(%<pname>);
    %closefile declbuf

    %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>

    %% PullDefault, PullUp, PullDown, PullNone
    %assign nInterruptMode = LibBlockParameterValue(InterruptMode, 0)
    %switch(nInterruptMode)
      %case 1
        %<name>.rise(NULL);
        %<name>.fall(NULL);
        %break
      %case 2
        %<name>.rise(%<name>_interrupt);
        %break
      %case 3
        %<name>.fall(%<name>_interrupt);
        %break
      %case 4
        %<name>.rise(%<name>_interrupt);
        %<name>.fall(%<name>_interrupt);
        %break
    %endswitch

    %openfile declbuf
    /* %<Type> block: %<Name> */
    void %<name>_interrupt();
    %closefile declbuf

    %<LibSetSourceFileSection(srcFile,"Declarations", declbuf)>

    %openfile declbuf
    /* %<Type> block: %<Name> */
    void %<name>_interrupt() {
      %<LibBlockExecuteFcnCall(block,0)>
    }

    %closefile declbuf

    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Functions", declbuf)>
  %endif

%endfunction
