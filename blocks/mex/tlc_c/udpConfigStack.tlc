%%  MbedTarget Simulink target
%%  Copyright (c) 2014-2017 Dr.O.Hagendorf , HS Wismar
%%
%%  Licensed under the Apache License, Version 2.0 (the "License");
%%  you may not use this file except in compliance with the License.
%%  You may obtain a copy of the License at
%%
%%      http://www.apache.org/licenses/LICENSE-2.0
%%
%%  Unless required by applicable law or agreed to in writing, software
%%  distributed under the License is distributed on an "AS IS" BASIS,
%%  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%%  See the License for the specific language governing permissions and
%%  limitations under the License.

%implements udpConfigStack "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction

%% Function: Start ========================================================
%function Start(block, system) Output

  %if !SLibCodeGenForSim()

    %assign ip =      SFcnParamSettings.IP
    %assign submask = SFcnParamSettings.submask
    %assign gateway = SFcnParamSettings.gateway

    %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
    %assign name = FEVAL("strrep",name," ","_")
    %assign name = FEVAL("strrep",name,"-","_")

    %%Add Ethernet things to the includes
    %openfile declbuf
    // %<Type> (udpConfigStack): '%<Name>'
    #define LWIP_TIMEVAL_PRIVATE 0
    %closefile declbuf

    %assign srcFile = LibGetModelDotHFile()
    %<LibSetSourceFileSection(srcFile, "Includes", declbuf)>
    %<LibAddToCommonIncludes("EthernetInterface.h")>

    %%Add Ethernet things to the variable declarations
    %openfile declbuf
    // %<Type> (udpConfigStack): '%<Name>'
    EthernetInterface %<name>;
    %closefile declbuf 

    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>

  %endif

  %if !SLibCodeGenForSim()
    %assign val_dhcp = LibBlockParameterValue(dhcp,0)

    %if %<val_dhcp>==0
    %<name>.init("%<ip>","%<submask>","%<gateway>");
    %<name>.connect();
    %else
    %<name>.init();
    %<name>.connect();
    %endif

  %endif

%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

%endfunction