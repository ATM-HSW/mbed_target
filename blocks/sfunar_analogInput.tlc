%% File : sfunar_analogInput.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2014 Dr.O.Hagendorf, HS Wismar

%implements sfunar_analogInput "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% %% Function: BlockInstanceSetup ===========================================
%% %function BlockInstanceSetup(block, system) void
%%   %%
%%   %<LibBlockSetIsExpressionCompliant(block)>
%%   %%
%% %endfunction


%% Function: Start ========================================================
%function Start(block, system) Output

  %if !SLibCodeGenForSim()
      %assign p1_val = LibBlockParameterValue(p1, 0)
      %assign p2_val = LibBlockParameterValue(p2, 0)

      %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
      %assign name = FEVAL("strrep",name," ","_")
      %assign pname = "P" + FEVAL("char",p2_val+64) + "_" + FEVAL("int2str",p1_val-1)
      %openfile declbuf

      AnalogIn %<name>(%<pname>);

      %closefile declbuf
      %assign srcFile = LibGetModelDotCFile()
      %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>
  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %if !SLibCodeGenForSim()
    %if !LibBlockOutputSignalIsExpr(0)
      %assign y1_val = LibBlockOutputSignal(0, "", "", 0)
      %assign y2_val = LibBlockOutputSignal(1, "", "", 0)
      %assign p1_val = LibBlockParameterValue(p1, 0)
      %assign p2_val = LibBlockParameterValue(p2, 0)

      %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
      %assign name = FEVAL("strrep",name," ","_")
      %%
      %<y1_val> = %<name>.read_u16();
      %<y2_val> = %<name>.read();
      %%
    %endif 
  %endif
%endfunction


%% %% Function: BlockOutputSignal ============================================
%% %function BlockOutputSignal(block,system,portIdx,ucv,lcv,idx,retType) void
%% 
%%   %assign retVal = 0U
%% 
%%   %if !SLibCodeGenForSim()
%%     %switch retType
%%       %case "Signal"
%%         %assign y1_val = LibBlockOutputSignal(0, "", "", 0)
%%         %assign p1_val = LibBlockParameterValue(p1, 0)
%%         %assign p2_val = LibBlockParameterValue(p2, 0)
%%         %%
%%         %assign retVal =  "%<name>.read_u16()"
%%         %%
%%         %break
%%       %default
%%         %assign errTxt = "Unsupported return type: %<retType>"
%%         %<LibBlockReportError(block,errTxt)>
%%         %break
%%     %endswitch
%%   %endif
%%   %return retVal
%% %endfunction
