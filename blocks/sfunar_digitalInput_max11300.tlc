%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2014 Dr.O.Hagendorf, HS Wismar
%% MAX11300 Modifications by Axel Utech 2014, HS Wismar

%implements sfunar_digitalInput_max11300 "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup(block, system) void
  %%
%%  %<LibBlockSetIsExpressionCompliant(block)> 
  %%
%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output

      %assign pin = LibBlockParameterValue(p1, 0)
      %assign thres = LibBlockParameterValue(p3, 0)
  %if !SLibCodeGenForSim()
    #if !defined(MAX11300_DEVICE)
        #error "No MAX11300 defined! Add a \"MAX11300-Config\" Block!"
    #endif
       max11300_pinSetup(%<pin>, 1, 0, 0, 0, 0, 0);
        max11300_setDacValue(%<pin>, %<thres>);
  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %if !SLibCodeGenForSim()
      %assign p1_val = LibBlockParameterValue(p1, 0)
      %assign y1_val = LibBlockOutputSignal(0, "", "", 0)

    %assign errorOutputEnable = LibBlockParameterValue(p2, 0)
    %if errorOutputEnable
        %assign ret_assign = LibBlockOutputSignal(1, "", "", 0) + "= !"
    %else
        %assign ret_assign = "(void)"
    %endif
      %%
        %<ret_assign> true;
        %<y1_val> = max11300_getPinValue(%<p1_val>);
      %%
  %endif
%endfunction
