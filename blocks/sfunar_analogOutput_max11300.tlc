%% File : sfunar_analogOutput.tlc
%%
%% Copyright 2010-2011 The MathWorks, Inc.
%% Copyright 2014 Dr.O.Hagendorf, HS Wismar
%% MAX11300 Modifications by Axel Utech 2014, HS Wismar

%implements sfunar_analogOutput_max11300 "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>
  %%
  %%
%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output

  %if !SLibCodeGenForSim()
    %assign pin = LibBlockParameterValue(p1, 0)
    %assign range = LibBlockParameterValue(p4, 0)
    #if !defined(MAX11300_DEVICE)
        #error "No MAX11300 defined! Add a \"MAX11300-Config\" Block!"
    #endif
max11300_pinSetup(%<pin>, 5, 0, 0, %<range>, 0, 0);
  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %if !SLibCodeGenForSim()
      %assign name = FEVAL("strrep",FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_"), " ", "_")

    %assign pin = LibBlockParameterValue(p1, 0)
    %assign u1_val = LibBlockInputSignal(0, "", "", 0)

    %assign range = LibBlockParameterValue(p4, 0)

    %assign inputVariant = LibBlockParameterValue(p3, 0)
    uint16_t %<name>_val;
    %switch inputVariant
    %case 0
        %<name>_val = %<u1_val> & 0x0FFF;
        %break
    %case 1
        %<name>_val = %<u1_val> >> 4;
        %break
    %case 2
        %<name>_val = (uint16_t)(%<u1_val> * 4095.0 + .5); 
        %break
    %default
        %<name>_val=0;
    %endswitch

    %assign errorOutputEnable = LibBlockParameterValue(p2, 0)
    %if errorOutputEnable
        %assign ret_assign = LibBlockOutputSignal(0, "", "", 0) + "= !"
    %else
        %assign ret_assign = "(void)"
    %endif
    %%

    %<ret_assign> max11300_setDacValue(%<pin>, %<name>_val);
    %%
  %endif
%endfunction
