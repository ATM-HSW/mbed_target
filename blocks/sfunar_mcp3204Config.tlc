%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2014 Dr.O.Hagendorf, HS Wismar
%% MCP3204 Modifications by Axel Utech 2014, HS Wismar
%% Copyright 2015 M. Marquardt, HS Wismar

%implements sfunar_mcp3204Config "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void
  
  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output

  %assign p2_val = LibBlockParameterValue(p1,0)
  %assign p3_val = LibBlockParameterValue(p2,0)
  %assign cs_name = "P" + FEVAL("char",p2_val+64) + "_" + FEVAL("int2str",p3_val-1)
  
  %assign spiport_val = CAST("Number", LibBlockParameterValue(SpiPort,0))

  %if !SLibCodeGenForSim()
    %openfile declbuf
    %%

#if defined(MCP3204_DEVICE)
    #error "Multiple MCP3204 Config blocks not supported"
#endif
#define MCP3204_DEVICE

DigitalOut cs_mcp3204(%<cs_name>);

uint16_t mcp3204_read(uint8_t channel, uint8_t single_ended){
    uint8_t out0 = !!single_ended << 1 | 1<<2;
    uint8_t out1 = (channel & 0x3) << 6;
    uint8_t out2 = 0;
    uint16_t data;
    
    cs_mcp3204 = 0;
    spi%<spiport_val>.write(out0);
    data = (spi%<spiport_val>.write(out1) & 0xF) << 8;
    data|= spi%<spiport_val>.write(out2);
    cs_mcp3204 = 1;
    return data;
}

    %%
    %closefile declbuf
    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Functions", declbuf)>
    cs_mcp3204=1;
  %endif
%endfunction
