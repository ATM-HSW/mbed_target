%% File : sfunar_analogOutput.tlc
%%
%% Copyright 2010-2011 The MathWorks, Inc.
%% Copyright 2014 Dr.O.Hagendorf, HS Wismar
%% MCP4728 Modifications by Axel Utech 2014, HS Wismar

%implements sfunar_analogOutput_mcp4728 "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>
  %%
  %%
%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output

  %if !SLibCodeGenForSim()

    #if !defined(MCP4728_ADDR_DEVICE)
        #error "No MCP4728 defined! Add a \"MCP4728-Config\" Block!"
    #endif
  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %if !SLibCodeGenForSim()
      %assign name = FEVAL("strrep",FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_"), " ", "_")

    %assign p1_val = LibBlockParameterValue(p1, 0)
    %assign u1_val = LibBlockInputSignal(0, "", "", 0)

    %assign internalRef = LibBlockParameterValue(p4, 0)
    %assign gain2x = LibBlockParameterValue(p5, 0)

    %assign inputVariant = LibBlockParameterValue(p3, 0)
    uint16_t %<name>_val;
    %switch inputVariant
    %case 0
        %<name>_val = %<u1_val> & 0x0FFF;
        %break
    %case 1
        %<name>_val = %<u1_val> >> 4;
        %break
    %case 2
        %<name>_val = mcp4728_valueFromVoltage(%<u1_val>, %<internalRef>, %<gain2x>); 
        %break
    %case 3
        %<name>_val = mcp4728_valueFromRelative(%<u1_val>); 
        %break
    %default
        %<name>_val=0;
    %endswitch

    %assign errorOutputEnable = LibBlockParameterValue(p2, 0)
    %if errorOutputEnable
        %assign ret_assign = LibBlockOutputSignal(0, "", "", 0) + "= !"
    %else
        %assign ret_assign = "(void)"
    %endif
    %%

    %<ret_assign> mcp4728_setChannel(%<p1_val>, %<internalRef>, 0, %<gain2x>, %<name>_val);
    %%
  %endif
%endfunction
