%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2014 Dr.O.Hagendorf, HS Wismar
%% MAX11300 Modifications by Axel Utech 2014, HS Wismar

%implements sfunar_analogInput_max11300 "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup(block, system) void
  %%
  %%  %<LibBlockSetIsExpressionCompliant(block)> 
  %%
%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output

  %if !SLibCodeGenForSim()
    #if !defined(MAX11300_DEVICE)
      #error "No MAX11300 defined! Add a \"MAX11300-Config\" Block!"
    #endif
    %assign mode = LibBlockParameterValue(p1, 0)
    %assign posPin = LibBlockParameterValue(p2, 0)
    %assign negPin = LibBlockParameterValue(p3, 0)
    %assign power = LibBlockParameterValue(p4, 0)
    %assign range = LibBlockParameterValue(p5, 0)
    %assign ref = LibBlockParameterValue(p6, 0)
    %assign errorOutputEnable = LibBlockParameterValue(p7, 0)
    %%
    max11300_pinSetup(%<posPin>, 7+%<mode>, %<negPin>, %<power>, %<range>, %<ref>, 0);

    %if mode == 1
      max11300_pinSetup(%<negPin>, 9, 0, 0, %<range>, %<ref>, 0);
    %endif
  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %if !SLibCodeGenForSim()
    %assign mode = LibBlockParameterValue(p1, 0)
    %assign posPin = LibBlockParameterValue(p2, 0)
    %assign negPin = LibBlockParameterValue(p3, 0)
    %assign power = LibBlockParameterValue(p4, 0)
    %assign range = LibBlockParameterValue(p5, 0)
    %assign ref = LibBlockParameterValue(p6, 0)
    %assign errorOutputEnable = LibBlockParameterValue(p7, 0)

    %assign name = FEVAL("strrep",FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_"), " ", "_")

    uint16_t %<name>_data;
    bool %<name>_success;
    %<name>_success = true;
    %<name>_data = max11300_getAdcValue(%<posPin>, %<mode>+7);
    %if !LibBlockOutputSignalIsExpr(0)
      %assign y1_val = LibBlockOutputSignal(0, "", "", 0)
      %<y1_val> = %<name>_data;
    %endif 
    %if !LibBlockOutputSignalIsExpr(1)
      %assign y3_val = LibBlockOutputSignal(1, "", "", 0)
      %if mode == 1
        %<y3_val> = %<name>_data / (4095.0/2);
      %else
        %<y3_val> = %<name>_data / 4095.0;
      %endif
    %endif 
    %if errorOutputEnable && !LibBlockOutputSignalIsExpr(2)
      %assign y4_val = LibBlockOutputSignal(2, "", "", 0)
      %<y4_val> = !%<name>_success;
    %else
      (void)%<name>_success;
    %endif 
    %%
  %endif
%endfunction
