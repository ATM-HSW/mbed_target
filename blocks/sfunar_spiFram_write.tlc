%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2014 Dr.O.Hagendorf, HS Wismar
%% FRAM Modifications by Axel Utech 2014, HS Wismar

%implements sfunar_spiFram_write "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

%endfunction


%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup(block, system) void
  %%
%%  %<LibBlockSetIsExpressionCompliant(block)> 
  %%
%endfunction


%% Function: Start ========================================================
%function Start(block, system) Output

      %assign readContinous = LibBlockParameterValue(p1, 0)
  %if !SLibCodeGenForSim()
    #if !defined(SPI_FRAM_DEVICE)
        #error "No SPI FRAM defined! Add a \"FRAM-Config\" Block!"
    #endif
    %if !readContinous
        %assign name = FEVAL("strrep",FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_"), " ", "_")    

        %openfile declbuf
        %%
         bool %<name>_staticSuccess;
        %closefile declbuf
        %assign srcFile = LibGetModelDotCFile()
        %<LibSetSourceFileSection(srcFile, "Functions", declbuf)>
    
        %assign u1_val = LibBlockInputSignal(0, "", "", 0)
        %assign u2_val = LibBlockInputSignal(1, "", "", 0)
        %assign u3_val = LibBlockInputSignal(2, "", "", 0)
        
        %<name>_staticSuccess = fram_write(%<u1_val>, %<u2_val>, &%<u3_val>, 1);
        
    %endif
  %endif
%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %if !SLibCodeGenForSim()
      %assign readContinous = LibBlockParameterValue(p1, 0)

    %assign errorOutputEnable = LibBlockParameterValue(p2, 0)
    %if errorOutputEnable
        %assign ret_assign = LibBlockOutputSignal(0, "", "", 0) + "= !"
    %else
        %assign ret_assign = "(void)"
    %endif


    %if !readContinous
        %assign name = FEVAL("strrep",FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_"), " ", "_")    
        %<ret_assign> %<name>_staticSuccess;
        
    %else
        %assign u1_val = LibBlockInputSignal(0, "", "", 0)
        %assign u2_val = LibBlockInputSignal(1, "", "", 0)
        %assign u3_val = LibBlockInputSignal(2, "", "", 0)
        %<ret_assign> fram_write(%<u1_val>, %<u2_val>, &%<u3_val>, 1);
    %endif

      %%
      %%
  %endif
%endfunction
