%% File : sfunar_DevSPI.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2016 Sven Lack

%implements powerSTEP01_config "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void
  
  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>
  %<LibAddToCommonIncludes("DevSPI.h")>
  %<LibAddToCommonIncludes("powerstep01_class.h")>
  
%<LibAddToModelSources("powerstep01_class")>

%endfunction

%% Function: Start ========================================================
%function Start(block, system) Output

  %assign name = FEVAL("strrep",LibGetFormattedBlockPath(block),"/","_")
  %assign name = FEVAL("strrep",name," ","_")
  %assign name = FEVAL("strrep",name,"-","_")

  %assign SPI_Nummer = LibBlockParameterValue(SPI_Nr,0)
  %assign spiport_name = "spi" + FEVAL("int2str",SPI_Nummer)

  %assign Reset_port_val = LibBlockParameterValue(Reset_Port, 0)
  %assign SSEL_port_val = LibBlockParameterValue(SSEL_Port, 0)
  
  %assign Reset_pin_val = LibBlockParameterValue(Reset_Pin, 0)
  %assign SSEL_pin_val = LibBlockParameterValue(SSEL_Pin, 0)

  %assign reset = "P" + FEVAL("char",Reset_port_val+64) + "_" + FEVAL("int2str",Reset_pin_val-1)
  %assign ssel = "P" + FEVAL("char",SSEL_port_val+64) + "_" + FEVAL("int2str",SSEL_pin_val-1)

  
  %assign acc_val = LibBlockParameterValue(ACC,0)
  %assign dec_val = LibBlockParameterValue(DEC,0)
  %assign max_speed_val = LibBlockParameterValue(Max_Speed,0)
  %assign min_speed_val = LibBlockParameterValue(Min_Speed,0)
  %assign full_step_speed_val = LibBlockParameterValue(Full_Step_Speed,0)
  %assign overcurrent_val = LibBlockParameterValue(Overcurrent,0)
  %assign step_mode_val = LibBlockParameterValue(Step_Mode,0)			
  %assign hold_torque_val = LibBlockParameterValue(Hold_torque,0) 
  %assign run_torque_val = LibBlockParameterValue(Run_torque,0)
  %assign acc_torque_val = LibBlockParameterValue(ACC_torque,0)
  %assign dec_torque_val = LibBlockParameterValue(DEC_torque,0)
  %assign checkbox = CAST("Number",LibBlockParameterValue(Current_Voltage_Mode_SEL,0))

  %assign acc_val_1 = LibBlockParameterValue(ACC_1,0)
  %assign dec_val_1 = LibBlockParameterValue(DEC_1,0)
  %assign max_speed_val_1 = LibBlockParameterValue(Max_Speed_1,0)
  %assign min_speed_val_1 = LibBlockParameterValue(Min_Speed_1,0)
  %assign full_step_speed_val_1 = LibBlockParameterValue(Full_Step_Speed_1,0)
  %assign overcurrent_val_1 = LibBlockParameterValue(Overcurrent_1,0)
  %assign step_mode_val_1 = LibBlockParameterValue(Step_Mode_1,0)			
  %assign hold_torque_val_1 = LibBlockParameterValue(Hold_torque_1,0) 
  %assign run_torque_val_1 = LibBlockParameterValue(Run_torque_1,0)
  %assign acc_torque_val_1 = LibBlockParameterValue(ACC_torque_1,0)
  %assign dec_torque_val_1 = LibBlockParameterValue(DEC_torque_1,0)
  %assign checkbox_1 = CAST("Number",LibBlockParameterValue(Current_Voltage_Mode_SEL_1,0))
  
  %assign acc_val_2 = LibBlockParameterValue(ACC_2,0)
  %assign dec_val_2 = LibBlockParameterValue(DEC_2,0)
  %assign max_speed_val_2 = LibBlockParameterValue(Max_Speed_2,0)
  %assign min_speed_val_2 = LibBlockParameterValue(Min_Speed_2,0)
  %assign full_step_speed_val_2 = LibBlockParameterValue(Full_Step_Speed_2,0)
  %assign overcurrent_val_2 = LibBlockParameterValue(Overcurrent_2,0)
  %assign step_mode_val_2 = LibBlockParameterValue(Step_Mode_2,0)			
  %assign hold_torque_val_2 = LibBlockParameterValue(Hold_torque_2,0) 
  %assign run_torque_val_2 = LibBlockParameterValue(Run_torque_2,0)
  %assign acc_torque_val_2 = LibBlockParameterValue(ACC_torque_2,0)
  %assign dec_torque_val_2 = LibBlockParameterValue(DEC_torque_2,0)
  %assign checkbox_2 = CAST("Number",LibBlockParameterValue(Current_Voltage_Mode_SEL_2,0))
  
  %assign checkbox_motor_2_SEL = CAST("Number",LibBlockParameterValue(Motor_2_SEL,0))
  %assign checkbox_motor_3_SEL = CAST("Number",LibBlockParameterValue(Motor_3_SEL,0))  
  
  %assign powerstep01_Init_u_i ="powerstep01_Init_u_i"+"_"+name
  %assign initDeviceParameters ="initDeviceParameters"+"_"+name+"_motor_1"
  %assign initDeviceParameters_1 ="initDeviceParameters"+"_"+name+"_motor_2"
  %assign initDeviceParameters_2="initDeviceParameters"+"_"+name+"_motor_3"
  
  %assign motor = "motor_1_"+spiport_name+ssel
  %assign motor_1 = "motor_2_"+spiport_name+ssel
  %assign motor_2 = "motor_3_"+spiport_name+ssel
  %assign dev_spi ="dev_spi"+"_"+name
  
	%switch step_mode_val
		%case 1
			%assign step_mode_name = "STEP_MODE_FULL"
			%break
		%case 2
			%assign step_mode_name = "STEP_MODE_HALF"
			%break
		%case 3
			%assign step_mode_name = "STEP_MODE_1_4"
			%break
		%case 4
			%assign step_mode_name = "STEP_MODE_1_8"
			%break
		%case 5
			%assign step_mode_name = "STEP_MODE_1_16"
			%break
		%case 6
			%assign step_mode_name = "STEP_MODE_1_32"
			%break
		%case 7
			%assign step_mode_name = "STEP_MODE_1_64"
			%break
		%case 8
			%assign step_mode_name = "STEP_MODE_1_128"
			%break
		%case 9
			%assign step_mode_name = "STEP_MODE_1_256"
			%break	
		%default
			%break
	%endswitch
	
	%switch step_mode_val_1
		%case 1
			%assign step_mode_name_1 = "STEP_MODE_FULL"
			%break
		%case 2
			%assign step_mode_name_1 = "STEP_MODE_HALF"
			%break
		%case 3
			%assign step_mode_name_1 = "STEP_MODE_1_4"
			%break
		%case 4
			%assign step_mode_name_1 = "STEP_MODE_1_8"
			%break
		%case 5
			%assign step_mode_name_1 = "STEP_MODE_1_16"
			%break
		%case 6
			%assign step_mode_name_1 = "STEP_MODE_1_32"
			%break
		%case 7
			%assign step_mode_name_1 = "STEP_MODE_1_64"
			%break
		%case 8
			%assign step_mode_name_1 = "STEP_MODE_1_128"
			%break
		%case 9
			%assign step_mode_name_1 = "STEP_MODE_1_256"
			%break	
		%default
			%break
	%endswitch
	
	%switch step_mode_val_2
		%case 1
			%assign step_mode_name_2 = "STEP_MODE_FULL"
			%break
		%case 2
			%assign step_mode_name_2 = "STEP_MODE_HALF"
			%break
		%case 3
			%assign step_mode_name_2 = "STEP_MODE_1_4"
			%break
		%case 4
			%assign step_mode_name_2 = "STEP_MODE_1_8"
			%break
		%case 5
			%assign step_mode_name_2 = "STEP_MODE_1_16"
			%break
		%case 6
			%assign step_mode_name_2 = "STEP_MODE_1_32"
			%break
		%case 7
			%assign step_mode_name_2 = "STEP_MODE_1_64"
			%break
		%case 8
			%assign step_mode_name_2 = "STEP_MODE_1_128"
			%break
		%case 9
			%assign step_mode_name_2 = "STEP_MODE_1_256"
			%break	
		%default
			%break
	%endswitch
  
  %if !SLibCodeGenForSim()
	  %openfile declbuf
		powerstep01_Init_u %<powerstep01_Init_u_i>;
		
		%if checkbox==0
			powerstep01_Init_u_t %<initDeviceParameters> =
			{
			  /* common parameters */
			  %<powerstep01_Init_u_i>.cm.cp.cmVmSelection = POWERSTEP01_CM_VM_CURRENT, // enum powerstep01_CmVm_t
			  %<acc_val>, // Acceleration rate in step/s2, range 14.55 to 59590 steps/s^2
			  %<dec_val>, // Deceleration rate in step/s2, range 14.55 to 59590 steps/s^2
			  %<max_speed_val>, // Maximum speed in step/s, range 15.25 to 15610 steps/s
			  %<min_speed_val>, // Minimum speed in step/s, range 0 to 976.3 steps/s
			  POWERSTEP01_LSPD_OPT_OFF, // Low speed optimization bit, enum powerstep01_LspdOpt_t
			  %<full_step_speed_val>, // Full step speed in step/s, range 7.63 to 15625 steps/s
			  POWERSTEP01_BOOST_MODE_OFF, // Boost of the amplitude square wave, enum powerstep01_BoostMode_t
			  %<overcurrent_val>, // Overcurrent threshold settings via enum powerstep01_OcdTh_t
			  %<step_mode_name>, // Step mode settings via enum motorStepMode_t
			  POWERSTEP01_SYNC_SEL_DISABLED, // Synch. Mode settings via enum powerstep01_SyncSel_t
			  (POWERSTEP01_ALARM_EN_OVERCURRENT|
			   POWERSTEP01_ALARM_EN_THERMAL_SHUTDOWN|
			   POWERSTEP01_ALARM_EN_THERMAL_WARNING|
			   POWERSTEP01_ALARM_EN_UVLO|
			   POWERSTEP01_ALARM_EN_STALL_DETECTION|
			   POWERSTEP01_ALARM_EN_SW_TURN_ON|
			   POWERSTEP01_ALARM_EN_WRONG_NPERF_CMD), // Alarm settings via bitmap enum powerstep01_AlarmEn_t
			  POWERSTEP01_IGATE_64mA, // Gate sink/source current via enum powerstep01_Igate_t 
			  POWERSTEP01_TBOOST_0ns, // Duration of the overboost phase during gate turn-off via enum powerstep01_Tboost_t
			  POWERSTEP01_TCC_500ns, // Controlled current time via enum powerstep01_Tcc_t
			  POWERSTEP01_WD_EN_DISABLE, // External clock watchdog, enum powerstep01_WdEn_t  
			  POWERSTEP01_TBLANK_375ns, // Duration of the blanking time via enum powerstep01_TBlank_t
			  POWERSTEP01_TDT_125ns, // Duration of the dead time via enum powerstep01_Tdt_t
			  
			  /* current mode parameters */
			  %<hold_torque_val>, // Hold torque in mV, range from 7.8mV to 1000 mV
			  %<run_torque_val>, // Running torque in mV, range from 7.8mV to 1000 mV 
			  %<acc_torque_val>, // Acceleration torque in mV, range from 7.8mV to 1000 mV
			  %<dec_torque_val>, // Deceleration torque in mV, range from 7.8mV to 1000 mV
			  POWERSTEP01_TOFF_FAST_8us, //Maximum fast decay time , enum powerstep01_ToffFast_t 
			  POWERSTEP01_FAST_STEP_12us, //Maximum fall step time , enum powerstep01_FastStep_t 
			  3.0, // Minimum on-time in us, range 0.5us to 64us
			  21.0, // Minimum off-time in us, range 0.5us to 64us 
			  POWERSTEP01_CONFIG_INT_16MHZ_OSCOUT_2MHZ, // Clock setting , enum powerstep01_ConfigOscMgmt_t
			  POWERSTEP01_CONFIG_SW_HARD_STOP, // External switch hard stop interrupt mode, enum powerstep01_ConfigSwMode_t
			  POWERSTEP01_CONFIG_TQ_REG_TVAL_USED, // External torque regulation enabling , enum powerstep01_ConfigEnTqReg_t
			  POWERSTEP01_CONFIG_VS_COMP_DISABLE, // Motor Supply Voltage Compensation enabling , enum powerstep01_ConfigEnVscomp_t 
			  POWERSTEP01_CONFIG_OC_SD_DISABLE, // Over current shutwdown enabling, enum powerstep01_ConfigOcSd_t
			  POWERSTEP01_CONFIG_UVLOVAL_LOW, // UVLO Threshold via powerstep01_ConfigUvLoVal_t
			  POWERSTEP01_CONFIG_VCCVAL_15V, // VCC Val, enum powerstep01_ConfigVccVal_t
			  POWERSTEP01_CONFIG_TSW_048us, // Switching period, enum powerstep01_ConfigTsw_t
			  POWERSTEP01_CONFIG_PRED_DISABLE // Predictive current enabling , enum powerstep01_ConfigPredEn_t 
			};
		%else
			powerstep01_Init_u_t %<initDeviceParameters> =
			{
			  /* common parameters */
			  %<powerstep01_Init_u_i>.vm.cp.cmVmSelection = POWERSTEP01_CM_VM_VOLTAGE, // enum powerstep01_CmVm_t
			  %<acc_val>, // Acceleration rate in step/s2, range 14.55 to 59590 steps/s^2
			  %<dec_val>, // Deceleration rate in step/s2, range 14.55 to 59590 steps/s^2
			  %<max_speed_val>, // Maximum speed in step/s, range 15.25 to 15610 steps/s
			  %<min_speed_val>, // Minimum speed in step/s, range 0 to 976.3 steps/s
			  POWERSTEP01_LSPD_OPT_OFF, // Low speed optimization bit, enum powerstep01_LspdOpt_t
			  %<full_step_speed_val>, // Full step speed in step/s, range 7.63 to 15625 steps/s
			  POWERSTEP01_BOOST_MODE_OFF, // Boost of the amplitude square wave, enum powerstep01_BoostMode_t
			  %<overcurrent_val>, // Overcurrent threshold settings via enum powerstep01_OcdTh_t
			  %<step_mode_name>, // Step mode settings via enum motorStepMode_t
			  POWERSTEP01_SYNC_SEL_DISABLED, // Synch. Mode settings via enum powerstep01_SyncSel_t
			  (POWERSTEP01_ALARM_EN_OVERCURRENT|
			   POWERSTEP01_ALARM_EN_THERMAL_SHUTDOWN|
			   POWERSTEP01_ALARM_EN_THERMAL_WARNING|
			   POWERSTEP01_ALARM_EN_UVLO|
			   POWERSTEP01_ALARM_EN_STALL_DETECTION|
			   POWERSTEP01_ALARM_EN_SW_TURN_ON|
			   POWERSTEP01_ALARM_EN_WRONG_NPERF_CMD), // Alarm settings via bitmap enum powerstep01_AlarmEn_t
			  POWERSTEP01_IGATE_64mA, // Gate sink/source current via enum powerstep01_Igate_t 
			  POWERSTEP01_TBOOST_0ns, // Duration of the overboost phase during gate turn-off via enum powerstep01_Tboost_t
			  POWERSTEP01_TCC_500ns, // Controlled current time via enum powerstep01_Tcc_t
			  POWERSTEP01_WD_EN_DISABLE, // External clock watchdog, enum powerstep01_WdEn_t  
			  POWERSTEP01_TBLANK_375ns, // Duration of the blanking time via enum powerstep01_TBlank_t
			  POWERSTEP01_TDT_125ns, // Duration of the dead time via enum powerstep01_Tdt_t
			  
			  /* voltage mode parameters */
			  %<hold_torque_val>, // Hold torque in mV, range from 7.8mV to 1000 mV
			  %<run_torque_val>, // Running torque in mV, range from 7.8mV to 1000 mV 
			  %<acc_torque_val>, // Acceleration torque in mV, range from 7.8mV to 1000 mV
			  %<dec_torque_val>, // Deceleration torque in mV, range from 7.8mV to 1000 mV
			  
			  61.5 ,			// INT_SPEED
			  250.038,			// ST_SLP
			  0.063, 			// FN_SLP_ACC
			  0.063,			// FN_SLP_DEC
			  1.0,			// K_THERM
			  10,			// STALL_TH

			  POWERSTEP01_CONFIG_INT_16MHZ_OSCOUT_2MHZ, // Clock setting , enum powerstep01_ConfigOscMgmt_t
			  POWERSTEP01_CONFIG_SW_HARD_STOP, // External switch hard stop interrupt mode, enum powerstep01_ConfigSwMode_t
			  POWERSTEP01_CONFIG_VS_COMP_DISABLE, // Motor Supply Voltage Compensation enabling , enum powerstep01_ConfigEnVscomp_t 
			  POWERSTEP01_CONFIG_OC_SD_DISABLE, // Over current shutwdown enabling, enum powerstep01_ConfigOcSd_t
			  POWERSTEP01_CONFIG_UVLOVAL_LOW, // UVLO Threshold via powerstep01_ConfigUvLoVal_t
			  POWERSTEP01_CONFIG_VCCVAL_15V, // VCC Val, enum powerstep01_ConfigVccVal_t
			  
			  POWERSTEP01_CONFIG_PWM_DIV_1, // F_PWM_INT
			  POWERSTEP01_CONFIG_PWM_MUL_0_75 , //F_PWM_DEC
			  
			};
		%endif
		
		%if checkbox_motor_2_SEL==1
			%if checkbox_1==0
				powerstep01_Init_u_t %<initDeviceParameters_1> =
				{
				  /* common parameters */
				  %<powerstep01_Init_u_i>.cm.cp.cmVmSelection = POWERSTEP01_CM_VM_CURRENT, // enum powerstep01_CmVm_t
				  %<acc_val_1>, // Acceleration rate in step/s2, range 14.55 to 59590 steps/s^2
				  %<dec_val_1>, // Deceleration rate in step/s2, range 14.55 to 59590 steps/s^2
				  %<max_speed_val_1>, // Maximum speed in step/s, range 15.25 to 15610 steps/s
				  %<min_speed_val_1>, // Minimum speed in step/s, range 0 to 976.3 steps/s
				  POWERSTEP01_LSPD_OPT_OFF, // Low speed optimization bit, enum powerstep01_LspdOpt_t
				  %<full_step_speed_val_1>, // Full step speed in step/s, range 7.63 to 15625 steps/s
				  POWERSTEP01_BOOST_MODE_OFF, // Boost of the amplitude square wave, enum powerstep01_BoostMode_t
				  %<overcurrent_val_1>, // Overcurrent threshold settings via enum powerstep01_OcdTh_t
				  %<step_mode_name_1>, // Step mode settings via enum motorStepMode_t
				  POWERSTEP01_SYNC_SEL_DISABLED, // Synch. Mode settings via enum powerstep01_SyncSel_t
				  (POWERSTEP01_ALARM_EN_OVERCURRENT|
				   POWERSTEP01_ALARM_EN_THERMAL_SHUTDOWN|
				   POWERSTEP01_ALARM_EN_THERMAL_WARNING|
				   POWERSTEP01_ALARM_EN_UVLO|
				   POWERSTEP01_ALARM_EN_STALL_DETECTION|
				   POWERSTEP01_ALARM_EN_SW_TURN_ON|
				   POWERSTEP01_ALARM_EN_WRONG_NPERF_CMD), // Alarm settings via bitmap enum powerstep01_AlarmEn_t
				  POWERSTEP01_IGATE_64mA, // Gate sink/source current via enum powerstep01_Igate_t 
				  POWERSTEP01_TBOOST_0ns, // Duration of the overboost phase during gate turn-off via enum powerstep01_Tboost_t
				  POWERSTEP01_TCC_500ns, // Controlled current time via enum powerstep01_Tcc_t
				  POWERSTEP01_WD_EN_DISABLE, // External clock watchdog, enum powerstep01_WdEn_t  
				  POWERSTEP01_TBLANK_375ns, // Duration of the blanking time via enum powerstep01_TBlank_t
				  POWERSTEP01_TDT_125ns, // Duration of the dead time via enum powerstep01_Tdt_t
				  
				  /* current mode parameters */
				  %<hold_torque_val_1>, // Hold torque in mV, range from 7.8mV to 1000 mV
				  %<run_torque_val_1>, // Running torque in mV, range from 7.8mV to 1000 mV 
				  %<acc_torque_val_1>, // Acceleration torque in mV, range from 7.8mV to 1000 mV
				  %<dec_torque_val_1>, // Deceleration torque in mV, range from 7.8mV to 1000 mV
				  POWERSTEP01_TOFF_FAST_8us, //Maximum fast decay time , enum powerstep01_ToffFast_t 
				  POWERSTEP01_FAST_STEP_12us, //Maximum fall step time , enum powerstep01_FastStep_t 
				  3.0, // Minimum on-time in us, range 0.5us to 64us
				  21.0, // Minimum off-time in us, range 0.5us to 64us 
				  POWERSTEP01_CONFIG_INT_16MHZ_OSCOUT_2MHZ, // Clock setting , enum powerstep01_ConfigOscMgmt_t
				  POWERSTEP01_CONFIG_SW_HARD_STOP, // External switch hard stop interrupt mode, enum powerstep01_ConfigSwMode_t
				  POWERSTEP01_CONFIG_TQ_REG_TVAL_USED, // External torque regulation enabling , enum powerstep01_ConfigEnTqReg_t
				  POWERSTEP01_CONFIG_VS_COMP_DISABLE, // Motor Supply Voltage Compensation enabling , enum powerstep01_ConfigEnVscomp_t 
				  POWERSTEP01_CONFIG_OC_SD_DISABLE, // Over current shutwdown enabling, enum powerstep01_ConfigOcSd_t
				  POWERSTEP01_CONFIG_UVLOVAL_LOW, // UVLO Threshold via powerstep01_ConfigUvLoVal_t
				  POWERSTEP01_CONFIG_VCCVAL_15V, // VCC Val, enum powerstep01_ConfigVccVal_t
				  POWERSTEP01_CONFIG_TSW_048us, // Switching period, enum powerstep01_ConfigTsw_t
				  POWERSTEP01_CONFIG_PRED_DISABLE // Predictive current enabling , enum powerstep01_ConfigPredEn_t 
				};
			%else
				powerstep01_Init_u_t %<initDeviceParameters_1> =
				{
				  /* common parameters */
				  %<powerstep01_Init_u_i>.vm.cp.cmVmSelection = POWERSTEP01_CM_VM_VOLTAGE, // enum powerstep01_CmVm_t
				  %<acc_val_1>, // Acceleration rate in step/s2, range 14.55 to 59590 steps/s^2
				  %<dec_val_1>, // Deceleration rate in step/s2, range 14.55 to 59590 steps/s^2
				  %<max_speed_val_1>, // Maximum speed in step/s, range 15.25 to 15610 steps/s
				  %<min_speed_val_1>, // Minimum speed in step/s, range 0 to 976.3 steps/s
				  POWERSTEP01_LSPD_OPT_OFF, // Low speed optimization bit, enum powerstep01_LspdOpt_t
				  %<full_step_speed_val_1>, // Full step speed in step/s, range 7.63 to 15625 steps/s
				  POWERSTEP01_BOOST_MODE_OFF, // Boost of the amplitude square wave, enum powerstep01_BoostMode_t
				  %<overcurrent_val_1>, // Overcurrent threshold settings via enum powerstep01_OcdTh_t
				  %<step_mode_name_1>, // Step mode settings via enum motorStepMode_t
				  POWERSTEP01_SYNC_SEL_DISABLED, // Synch. Mode settings via enum powerstep01_SyncSel_t
				  (POWERSTEP01_ALARM_EN_OVERCURRENT|
				   POWERSTEP01_ALARM_EN_THERMAL_SHUTDOWN|
				   POWERSTEP01_ALARM_EN_THERMAL_WARNING|
				   POWERSTEP01_ALARM_EN_UVLO|
				   POWERSTEP01_ALARM_EN_STALL_DETECTION|
				   POWERSTEP01_ALARM_EN_SW_TURN_ON|
				   POWERSTEP01_ALARM_EN_WRONG_NPERF_CMD), // Alarm settings via bitmap enum powerstep01_AlarmEn_t
				  POWERSTEP01_IGATE_64mA, // Gate sink/source current via enum powerstep01_Igate_t 
				  POWERSTEP01_TBOOST_0ns, // Duration of the overboost phase during gate turn-off via enum powerstep01_Tboost_t
				  POWERSTEP01_TCC_500ns, // Controlled current time via enum powerstep01_Tcc_t
				  POWERSTEP01_WD_EN_DISABLE, // External clock watchdog, enum powerstep01_WdEn_t  
				  POWERSTEP01_TBLANK_375ns, // Duration of the blanking time via enum powerstep01_TBlank_t
				  POWERSTEP01_TDT_125ns, // Duration of the dead time via enum powerstep01_Tdt_t
				  
				  /* voltage mode parameters */
				  %<hold_torque_val_1>, // Hold torque in mV, range from 7.8mV to 1000 mV
				  %<run_torque_val_1>, // Running torque in mV, range from 7.8mV to 1000 mV 
				  %<acc_torque_val_1>, // Acceleration torque in mV, range from 7.8mV to 1000 mV
				  %<dec_torque_val_1>, // Deceleration torque in mV, range from 7.8mV to 1000 mV
				  
				  61.5 ,			// INT_SPEED
				  250.038,			// ST_SLP
				  0.063, 			// FN_SLP_ACC
				  0.063,			// FN_SLP_DEC
				  1.0,			// K_THERM
				  10,			// STALL_TH

				  POWERSTEP01_CONFIG_INT_16MHZ_OSCOUT_2MHZ, // Clock setting , enum powerstep01_ConfigOscMgmt_t
				  POWERSTEP01_CONFIG_SW_HARD_STOP, // External switch hard stop interrupt mode, enum powerstep01_ConfigSwMode_t
				  POWERSTEP01_CONFIG_VS_COMP_DISABLE, // Motor Supply Voltage Compensation enabling , enum powerstep01_ConfigEnVscomp_t 
				  POWERSTEP01_CONFIG_OC_SD_DISABLE, // Over current shutwdown enabling, enum powerstep01_ConfigOcSd_t
				  POWERSTEP01_CONFIG_UVLOVAL_LOW, // UVLO Threshold via powerstep01_ConfigUvLoVal_t
				  POWERSTEP01_CONFIG_VCCVAL_15V, // VCC Val, enum powerstep01_ConfigVccVal_t
				  
				  POWERSTEP01_CONFIG_PWM_DIV_1, // F_PWM_INT
				  POWERSTEP01_CONFIG_PWM_MUL_0_75 , //F_PWM_DEC
				  
				};
			%endif
		%endif
		
		%if checkbox_motor_3_SEL==1
			%if checkbox_2==0
				powerstep01_Init_u_t %<initDeviceParameters_2> =
				{
				  /* common parameters */
				  %<powerstep01_Init_u_i>.cm.cp.cmVmSelection = POWERSTEP01_CM_VM_CURRENT, // enum powerstep01_CmVm_t
				  %<acc_val_2>, // Acceleration rate in step/s2, range 14.55 to 59590 steps/s^2
				  %<dec_val_2>, // Deceleration rate in step/s2, range 14.55 to 59590 steps/s^2
				  %<max_speed_val_2>, // Maximum speed in step/s, range 15.25 to 15610 steps/s
				  %<min_speed_val_2>, // Minimum speed in step/s, range 0 to 976.3 steps/s
				  POWERSTEP01_LSPD_OPT_OFF, // Low speed optimization bit, enum powerstep01_LspdOpt_t
				  %<full_step_speed_val_2>, // Full step speed in step/s, range 7.63 to 15625 steps/s
				  POWERSTEP01_BOOST_MODE_OFF, // Boost of the amplitude square wave, enum powerstep01_BoostMode_t
				  %<overcurrent_val_2>, // Overcurrent threshold settings via enum powerstep01_OcdTh_t
				  %<step_mode_name_2>, // Step mode settings via enum motorStepMode_t
				  POWERSTEP01_SYNC_SEL_DISABLED, // Synch. Mode settings via enum powerstep01_SyncSel_t
				  (POWERSTEP01_ALARM_EN_OVERCURRENT|
				   POWERSTEP01_ALARM_EN_THERMAL_SHUTDOWN|
				   POWERSTEP01_ALARM_EN_THERMAL_WARNING|
				   POWERSTEP01_ALARM_EN_UVLO|
				   POWERSTEP01_ALARM_EN_STALL_DETECTION|
				   POWERSTEP01_ALARM_EN_SW_TURN_ON|
				   POWERSTEP01_ALARM_EN_WRONG_NPERF_CMD), // Alarm settings via bitmap enum powerstep01_AlarmEn_t
				  POWERSTEP01_IGATE_64mA, // Gate sink/source current via enum powerstep01_Igate_t 
				  POWERSTEP01_TBOOST_0ns, // Duration of the overboost phase during gate turn-off via enum powerstep01_Tboost_t
				  POWERSTEP01_TCC_500ns, // Controlled current time via enum powerstep01_Tcc_t
				  POWERSTEP01_WD_EN_DISABLE, // External clock watchdog, enum powerstep01_WdEn_t  
				  POWERSTEP01_TBLANK_375ns, // Duration of the blanking time via enum powerstep01_TBlank_t
				  POWERSTEP01_TDT_125ns, // Duration of the dead time via enum powerstep01_Tdt_t
				  
				  /* current mode parameters */
				  %<hold_torque_val_2>, // Hold torque in mV, range from 7.8mV to 1000 mV
				  %<run_torque_val_2>, // Running torque in mV, range from 7.8mV to 1000 mV 
				  %<acc_torque_val_2>, // Acceleration torque in mV, range from 7.8mV to 1000 mV
				  %<dec_torque_val_2>, // Deceleration torque in mV, range from 7.8mV to 1000 mV
				  POWERSTEP01_TOFF_FAST_8us, //Maximum fast decay time , enum powerstep01_ToffFast_t 
				  POWERSTEP01_FAST_STEP_12us, //Maximum fall step time , enum powerstep01_FastStep_t 
				  3.0, // Minimum on-time in us, range 0.5us to 64us
				  21.0, // Minimum off-time in us, range 0.5us to 64us 
				  POWERSTEP01_CONFIG_INT_16MHZ_OSCOUT_2MHZ, // Clock setting , enum powerstep01_ConfigOscMgmt_t
				  POWERSTEP01_CONFIG_SW_HARD_STOP, // External switch hard stop interrupt mode, enum powerstep01_ConfigSwMode_t
				  POWERSTEP01_CONFIG_TQ_REG_TVAL_USED, // External torque regulation enabling , enum powerstep01_ConfigEnTqReg_t
				  POWERSTEP01_CONFIG_VS_COMP_DISABLE, // Motor Supply Voltage Compensation enabling , enum powerstep01_ConfigEnVscomp_t 
				  POWERSTEP01_CONFIG_OC_SD_DISABLE, // Over current shutwdown enabling, enum powerstep01_ConfigOcSd_t
				  POWERSTEP01_CONFIG_UVLOVAL_LOW, // UVLO Threshold via powerstep01_ConfigUvLoVal_t
				  POWERSTEP01_CONFIG_VCCVAL_15V, // VCC Val, enum powerstep01_ConfigVccVal_t
				  POWERSTEP01_CONFIG_TSW_048us, // Switching period, enum powerstep01_ConfigTsw_t
				  POWERSTEP01_CONFIG_PRED_DISABLE // Predictive current enabling , enum powerstep01_ConfigPredEn_t 
				};
			%else
				powerstep01_Init_u_t %<initDeviceParameters_2> =
				{
				  /* common parameters */
				  %<powerstep01_Init_u_i>.vm.cp.cmVmSelection = POWERSTEP01_CM_VM_VOLTAGE, // enum powerstep01_CmVm_t
				  %<acc_val_2>, // Acceleration rate in step/s2, range 14.55 to 59590 steps/s^2
				  %<dec_val_2>, // Deceleration rate in step/s2, range 14.55 to 59590 steps/s^2
				  %<max_speed_val_2>, // Maximum speed in step/s, range 15.25 to 15610 steps/s
				  %<min_speed_val_2>, // Minimum speed in step/s, range 0 to 976.3 steps/s
				  POWERSTEP01_LSPD_OPT_OFF, // Low speed optimization bit, enum powerstep01_LspdOpt_t
				  %<full_step_speed_val_2>, // Full step speed in step/s, range 7.63 to 15625 steps/s
				  POWERSTEP01_BOOST_MODE_OFF, // Boost of the amplitude square wave, enum powerstep01_BoostMode_t
				  %<overcurrent_val_2>, // Overcurrent threshold settings via enum powerstep01_OcdTh_t
				  %<step_mode_name_2>, // Step mode settings via enum motorStepMode_t
				  POWERSTEP01_SYNC_SEL_DISABLED, // Synch. Mode settings via enum powerstep01_SyncSel_t
				  (POWERSTEP01_ALARM_EN_OVERCURRENT|
				   POWERSTEP01_ALARM_EN_THERMAL_SHUTDOWN|
				   POWERSTEP01_ALARM_EN_THERMAL_WARNING|
				   POWERSTEP01_ALARM_EN_UVLO|
				   POWERSTEP01_ALARM_EN_STALL_DETECTION|
				   POWERSTEP01_ALARM_EN_SW_TURN_ON|
				   POWERSTEP01_ALARM_EN_WRONG_NPERF_CMD), // Alarm settings via bitmap enum powerstep01_AlarmEn_t
				  POWERSTEP01_IGATE_64mA, // Gate sink/source current via enum powerstep01_Igate_t 
				  POWERSTEP01_TBOOST_0ns, // Duration of the overboost phase during gate turn-off via enum powerstep01_Tboost_t
				  POWERSTEP01_TCC_500ns, // Controlled current time via enum powerstep01_Tcc_t
				  POWERSTEP01_WD_EN_DISABLE, // External clock watchdog, enum powerstep01_WdEn_t  
				  POWERSTEP01_TBLANK_375ns, // Duration of the blanking time via enum powerstep01_TBlank_t
				  POWERSTEP01_TDT_125ns, // Duration of the dead time via enum powerstep01_Tdt_t
				  
				  /* voltage mode parameters */
				  %<hold_torque_val_2>, // Hold torque in mV, range from 7.8mV to 1000 mV
				  %<run_torque_val_2>, // Running torque in mV, range from 7.8mV to 1000 mV 
				  %<acc_torque_val_2>, // Acceleration torque in mV, range from 7.8mV to 1000 mV
				  %<dec_torque_val_2>, // Deceleration torque in mV, range from 7.8mV to 1000 mV
				  
				  61.5 ,			// INT_SPEED
				  250.038,			// ST_SLP
				  0.063, 			// FN_SLP_ACC
				  0.063,			// FN_SLP_DEC
				  1.0,			// K_THERM
				  10,			// STALL_TH

				  POWERSTEP01_CONFIG_INT_16MHZ_OSCOUT_2MHZ, // Clock setting , enum powerstep01_ConfigOscMgmt_t
				  POWERSTEP01_CONFIG_SW_HARD_STOP, // External switch hard stop interrupt mode, enum powerstep01_ConfigSwMode_t
				  POWERSTEP01_CONFIG_VS_COMP_DISABLE, // Motor Supply Voltage Compensation enabling , enum powerstep01_ConfigEnVscomp_t 
				  POWERSTEP01_CONFIG_OC_SD_DISABLE, // Over current shutwdown enabling, enum powerstep01_ConfigOcSd_t
				  POWERSTEP01_CONFIG_UVLOVAL_LOW, // UVLO Threshold via powerstep01_ConfigUvLoVal_t
				  POWERSTEP01_CONFIG_VCCVAL_15V, // VCC Val, enum powerstep01_ConfigVccVal_t
				  
				  POWERSTEP01_CONFIG_PWM_DIV_1, // F_PWM_INT
				  POWERSTEP01_CONFIG_PWM_MUL_0_75 , //F_PWM_DEC
				  
				};
			%endif
		%endif

	  POWERSTEP01 *%<motor>;         // Konstruktor in powerstep01_class.h
	  
	  %if checkbox_motor_2_SEL==1
		POWERSTEP01 *%<motor_1>;
	  %endif
	  
	  %if checkbox_motor_3_SEL==1
		POWERSTEP01 *%<motor_2>;
	  %endif	  
	  
	  DevSPI %<dev_spi>(&%<spiport_name>);

      %closefile declbuf
      %assign srcFile = LibGetModelDotCFile()
      %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>
	  
	  %%/* Initializing Motor Control Component. */
	  %% POWERSTEP01( standby_reset, ssel, DevSPI &spi) 
	  
	  %<motor> = new POWERSTEP01(%<reset>,%<ssel>, %<dev_spi>);

	  %if checkbox_motor_2_SEL==1
		%<motor_1> = new POWERSTEP01(%<reset>,%<ssel>, %<dev_spi>);
	  %endif

	  %if checkbox_motor_3_SEL==1
		%<motor_2> = new POWERSTEP01(%<reset>,%<ssel>, %<dev_spi>);
	  %endif
	  
	  if (%<motor>->Init(&%<initDeviceParameters>) != COMPONENT_OK) exit(EXIT_FAILURE);
	  
	  %if checkbox_motor_2_SEL==1
		if (%<motor_1>->Init(&%<initDeviceParameters_1>) != COMPONENT_OK) exit(EXIT_FAILURE);
	  %endif

	  %if checkbox_motor_3_SEL==1
		if (%<motor_2>->Init(&%<initDeviceParameters_2>) != COMPONENT_OK) exit(EXIT_FAILURE);
	  %endif
  %endif

%endfunction



