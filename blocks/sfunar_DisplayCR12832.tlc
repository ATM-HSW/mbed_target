%% File : sfunar_datalogger.tlc
%%
%% Copyright 2010 The MathWorks, Inc.
%% Copyright 2016 Dr.O.Hagendorf, HS Wismar

%implements sfunar_DisplayCR12832 "C"

%include "block_common_includes.tlc"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup(block, system) void

  %% Ensure required header files are included
  %<MbedCommonBlockTypeSetup(block, system)>

  %<LibAddToCommonIncludes("C12832.h")>
  %<LibAddToModelSources("C12832")>
  %<LibAddToModelSources("GraphicsDisplay")>
  %<LibAddToModelSources("TextDisplay")>

%endfunction

%% Function: Start ========================================================
%function Start(block, system) Output

  %if !SLibCodeGenForSim()
    %assign spiport_val = CAST("Number",LibBlockParameterValue(SpiPort, 0))

    %assign csport_val = LibBlockParameterValue(CsPort,0)
    %assign cspin_val = LibBlockParameterValue(CsPin,0)
    %assign cs_name = "P" + FEVAL("char",csport_val+64) + "_" + FEVAL("int2str",cspin_val-1)

    %assign resport_val = LibBlockParameterValue(ResPort,0)
    %assign respin_val = LibBlockParameterValue(ResPin,0)
    %assign res_name = "P" + FEVAL("char",resport_val+64) + "_" + FEVAL("int2str",respin_val-1)

    %assign a0port_val = LibBlockParameterValue(A0Port,0)
    %assign a0pin_val = LibBlockParameterValue(A0Pin,0)
    %assign a0_name = "P" + FEVAL("char",a0port_val+64) + "_" + FEVAL("int2str",a0pin_val-1)

    %assign instance = FEVAL("char",csport_val+64) + FEVAL("int2str",cspin_val)

    %assign text1 = LibBlockParameterString(Row1)
    %assign text2 = LibBlockParameterString(Row2)
    %assign text3 = LibBlockParameterString(Row3)


    %openfile declbuf

    C12832 c12832_%<instance>(&spi%<spiport_val>,%<res_name>,%<a0_name>,%<cs_name>);

    %closefile declbuf 

    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Declarations", declbuf)>

    spi%<spiport_val>.format(8,3);                 // 8 bit spi mode 3
    //spi%<spiport_val>.frequency(20000000);          // 19,2 Mhz SPI clock
    c12832_%<instance>.cls();

  %endif

%endfunction


%% Function: Outputs ======================================================
%function Outputs(block, system) Output

  %if !SLibCodeGenForSim()
    %assign nInputs1  = LibBlockParameterValue(NumberOfInputs1, 0)
    %assign nInputs2  = LibBlockParameterValue(NumberOfInputs2, 0)
    %assign nInputs3  = LibBlockParameterValue(NumberOfInputs3, 0)
    %assign text1 = LibBlockParameterString(Row1)
    %assign text2 = LibBlockParameterString(Row2)
    %assign text3 = LibBlockParameterString(Row3)

    %assign csport_val = LibBlockParameterValue(CsPort,0)
    %assign cspin_val = LibBlockParameterValue(CsPin,0)
    %assign instance = FEVAL("char",csport_val+64) + FEVAL("int2str",cspin_val)

    %assign str = ""
    %foreach port = nInputs1
        %assign u = LibBlockInputSignal(port, "", "", 0)
        %assign str = str + "," + u
    %endforeach
    c12832_%<instance>.locate(0,0);
    c12832_%<instance>.printf("%<text1>" %<str>);
    %assign str = ""
    %foreach port = nInputs2
        %assign u = LibBlockInputSignal(port+nInputs1, "", "", 0)
        %assign str = str + "," + u
    %endforeach
    c12832_%<instance>.locate(0,11);
    c12832_%<instance>.printf("%<text2>" %<str>);
    %assign str = ""
    %foreach port = nInputs3
        %assign u = LibBlockInputSignal(port+nInputs1+nInputs2, "", "", 0)
        %assign str = str + "," + u
    %endforeach
    c12832_%<instance>.locate(0,22);
    c12832_%<instance>.printf("%<text3>" %<str>);
  %endif
%endfunction

