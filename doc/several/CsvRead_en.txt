CSVReader
=========

Description
-----------

Reads an input vector in the scanf style. The number of, the width and data type of each input port can be configured.

Input port:
vector of uint8 (character array)

Type of Outputs:
List of 2-tuples
 1st tuple item: Port width
 2nd tuple item: Port data type (single, double, int8, int16, int32, uint8, uint16, uint32, bool)
 e.g.: {'8*uint8' '4*int8' '1*bool'}
 
Output port:
 The number of output ports, their width and data types corespond to the number of cell items in Type of Outputs config option.

.. image:: ../images/block_CSVReader.png
   :scale: 50 %

Data Type Support
-----------------

The output port writes values with *real32* and *uint16* data types.
The input port expects values with *real32* or *uint16* data types.

Parameters Dialog Box
---------------------

.. image:: ../images/mask_CSVReader.png

Port Name/Pin Number
....................
specify the mcu pin. This block supports the naming schema: 'P' + letter 'A', 'B', 'C', ... + '_' + number '0', '1', ... '15', e.g. PA_0.

Sample Time
...........
specifies the time interval between samples. To inherit the sample time, set this parameter to -1.

Example
-------

In the example an analog input pin is read in by an Analog Input Block. This value is written to an analog output pin by an Analog Output block.

.. image:: ../images/example_Several_CSVReaderWriter.png
   :scale: 50 %


Code Generation
---------------
Instance names of mbed classes are created by concatenating model name (, submodelnames) and block name (\ **<Model Name>**\ _(**<Subblock Name>**\ _...)\ **<Block Name>**\ ). Space and minus characters are substituted by underscore ('_') characters.

Global parts
............

creates a global instance

.. code-block:: c++

  xx <instance name>(P<Port Name>_<Pin Number>);

in \ **<Model Name>**\ .cpp.

Step Function
.............

creates two lines in void **<Model Name>**\ _step(void) function

.. code-block:: c++

  lvalue1  = (uint16_T)<instance name>.read_u16());
  lvalue2  = (real32_T)<instance name>.read();
