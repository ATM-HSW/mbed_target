Digital Output
==============

Description
-----------

This block writes a digital value to an output pin.

.. image:: ../images/block_Digital_Output.png
   :width: 250 px

Data Type Support
-----------------

The input port expects an *uint8* data type.

Parameters Dialog Box
---------------------

.. image:: ../images/mask_Digital_Output.png

Port Name/Pin Number
....................
specify the mcu pin. This block supports the naming schema: 'P' + letter 'A', 'B', 'C', ... + '_' + number '0', '1', ... '15', e.g. PA_0.

Output Mode
...........
specifies the pin output mode. The possible values correspond to the values defined in the mbed DigitalInOut class: PullDefault, PullUp, PullDown, PullNone, Repeater, OpenDrain

Sample Time
...........
specifies the time interval between samples. To inherit the sample time, set this parameter to -1.

Example
-------

In the example an input pin is read in by an Digital Input Block. This value is written to a pin by an Digital Output block.

.. image:: ../images/example_DigitaloutDigitalin.png
   :scale: 50 %


Code Generation
---------------
Instance names of mbed classes are created by concatenating model name (, submodelnames) and block name (\ **<Model Name>**\ _(**<Subblock Name>**\ _...)\ **<Block Name>**\ ). Space and minus characters are substituted by underscore ('_') characters.

Global parts
............

creates a global instance

.. code-block:: c++

  DigitalInOut <instance name>(P<Port Name>_<Pin Number>);

Initialization Function
.......................

and two lines in void **<Model Name>**\ _initialize(void) function

.. code-block:: c++

  <instance name>.output();
  <instance name>.mode(<Output Mode>);

in \ **<Model Name>**\ .cpp.

Step Function
.............

creates one line in void **<Model Name>**\ _step(void) function

.. code-block:: c++

  <instance name> = (uint8_T)rvalue;
